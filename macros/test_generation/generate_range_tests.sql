
{% macro get_range_test_suggestions(
        table_relation,
        sample = false,
        limit = None,
        is_source = false,
        exclude_types = [],
        exclude_cols = [],
        tags = ["range"],
        dbt_config = None
    ) %}
    {# Run macro for the specific target DB #}
    {% if execute %}
        {{ return(adapter.dispatch('get_range_test_suggestions', 'testgen')(table_relation, sample, limit, is_source, exclude_types, exclude_cols, tags, **kwargs)) }}
    {% endif%}
{%- endmacro %}


{% macro default__get_range_test_suggestions(
        table_relation,
        sample = false,
        limit = None,
        is_source = false,
        exclude_types = [],
        exclude_cols = [],
        tags = ["range"],
        dbt_config = None
    ) 
%}
    {# kwargs is used for test configurations #}
    {% set test_config = kwargs %}
    {% if tags != None %}
        {% do test_config.update({"tags": tags}) %}
    {% endif %}

    {% if is_source == true %}
        {% set models_or_sources = "sources" %}
    {% else %}
        {% set models_or_sources = "models" %}
    {% endif %}

    {% set columns = adapter.get_columns_in_relation(table_relation) %}
    {% set columns = testgen.exclude_column_types(columns, exclude_types) %}
    {% set columns = testgen.exclude_column_names(columns, exclude_cols) %}

    {% set number_cols = [] %}
    {% for column in columns %}
        {% if column.is_number() %}
            {% do number_cols.append(column) %}
        {% endif %}
    {% endfor %}

    {% set min_max_exprs = [] %}
    {% for column in number_cols %}
        {% do min_max_exprs.append(
            "SELECT '" ~ column.column ~ "' AS colname, " ~ 
                "MIN(" ~ column.column ~ ") as col_min, " ~ 
                "MAX(" ~ column.column ~ ") as col_max " ~ 
            "FROM " ~ table_relation
        ) %}
    {% endfor %}


    {% set min_max_sql %}
        SELECT * FROM (
            {{ min_max_exprs | join("\nUNION ALL\n") }}
        ) t1
    {% endset %}

    {% set results = testgen.query_as_list(min_max_sql) %}

    {% set column_tests = [] %}
    {% for result in results %}
        {% do column_tests.append({
                "name": result.colname,
                "description": "Numeric range test generated by dbt-testgen",
                "tests": [
                    {
                        "dbt_utils.accepted_range": {
                            "min_value": result.col_min,
                            "max_value": result.col_max
                        }
                    }
                ]
            }
        ) %}
    {% endfor %}

    {% if dbt_config == None %}
        {% set dbt_config = {models_or_sources: []} %}
    {% endif %}

    {% do dbt_config[models_or_sources].append({"name": table_relation.identifier, "columns": column_tests}) %}

    {% do return(dbt_config) %}

{% endmacro %}

